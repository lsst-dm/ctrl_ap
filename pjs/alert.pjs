void setup() {
    int width = 1000;
    int height = 900;
    size(width, height);
}

long baseMillis;
long nextMillis;
long lastMillis;
long milliDelta;
Array objs;
int counter = 0;
int length;
ArchiveDMCS archiveDMCS;
BaseDMCS baseDMCS;
ReplicatorGroup replicatorGroup;
DistributorGroup distributorGroup;
FocalPlaneGroup  focalPlaneGroup;

void draw() {
    
    if (objs == null) // || counter > 500)
        return;
   
    if (counter >= total)
        return;
    rightNow = millis();
    if (rightNow >= (lastMillis+milliDelta)) {
        JSONObject jobj = objs[counter];
        String component = jobj.component;
        if (component.equals("worker job")) {
            focalPlaneGroup.processMessage(jobj);
        } else if (component.equals("wavefront sensor job")) {
            focalPlaneGroup.processMessage(jobj);
        } else if (component.equals("base dmcs")) {
            baseDMCS.processMessage(jobj);
        } else if (component.equals("archive dmcs")) {
            archiveDMCS.processMessage(jobj);
        } else if (component.equals("distributor")) {
            distributorGroup.processMessage(jobj);
        } else if (component.equals("replicator node")) {
            replicatorGroup.processMessage(jobj);
        } else if (component.equals("replicator job")) {
            replicatorGroup.processMessage(jobj);
        } else if (component.equals("wavefront job")) {
            replicatorGroup.processMessage(jobj);
        } else {
            println("---");
        }
        lastMillis = millis();
        counter++;
        milliDelta = int(objs[counter].time);
        if (milliDelta > 2000)
            println("lastMillis = "+lastMillis+", milliDelta = "+milliDelta);
    } else {
        //counter++;
    }
}

void doit(obj_ar) {
    objs = obj_ar;
    println("yee ha!");
    println(obj_ar[0].component);
    println(obj_ar[0].time);

    total = objs.length;

    println("total = "+total);
    background(200);
    baseDMCS = new BaseDMCS(90,height-100);
    baseDMCS.update();

    LSSTCamera lsstCamera = new LSSTCamera(90,250);
    lsstCamera.update();

    archiveDMCS = new ArchiveDMCS(width-170,height-100);
    archiveDMCS.update();

    replicatorGroup = new ReplicatorGroup(250,30);
    replicatorGroup.update();


    distributorGroup = new DistributorGroup(350,30);
    distributorGroup.update();

    focalPlaneGroup = new FocalPlaneGroup(500, 100);
    focalPlaneGroup.update();
    
    Legend legend = new Legend(10, 10);
    legend.update();

    lastMillis = millis();
    milliDelta = int(obj_ar[0].time);
    
    println("bah");
    println("lastMillis "+lastMillis);
    println("baseMillis "+baseMillis);
    println("nextMillis "+nextMillis);
    println("milliDelta "+milliDelta);
    println("boom");
}
